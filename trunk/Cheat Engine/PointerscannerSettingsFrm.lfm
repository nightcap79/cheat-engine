object frmPointerScannerSettings: TfrmPointerScannerSettings
  Left = 1150
  Height = 464
  Top = 152
  Width = 638
  BorderStyle = bsSingle
  Caption = 'Pointerscanner scanoptions'
  ClientHeight = 464
  ClientWidth = 638
  Font.Height = -11
  Font.Name = 'MS Sans Serif'
  OnCreate = FormCreate
  OnDestroy = FormDestroy
  OnShow = FormShow
  Position = poScreenCenter
  LCLVersion = '1.3'
  object edtAddress: TEdit
    Left = 8
    Height = 21
    Top = 28
    Width = 488
    CharCase = ecUppercase
    Font.Height = -11
    Font.Name = 'MS Sans Serif'
    OnChange = edtAddressChange
    ParentFont = False
    TabOrder = 0
  end
  object PSSettings: TPageControl
    Left = 8
    Height = 210
    Top = 55
    Width = 624
    ActivePage = PSReverse
    Font.Height = -11
    Font.Name = 'MS Sans Serif'
    ParentFont = False
    TabIndex = 0
    TabOrder = 1
    object PSReverse: TTabSheet
      Caption = 'Reverse'
      ClientHeight = 184
      ClientWidth = 616
      ImageIndex = 1
      TabVisible = False
      object Label10: TLabel
        Left = 4
        Height = 13
        Top = 105
        Width = 23
        Caption = 'From'
        ParentColor = False
      end
      object Label11: TLabel
        Left = 4
        Height = 13
        Top = 127
        Width = 16
        Caption = 'To:'
        ParentColor = False
      end
      object Label13: TLabel
        Left = 4
        Height = 13
        Top = 83
        Width = 200
        Caption = 'Pointer path may only be inside this region:'
        ParentColor = False
      end
      object CbAlligned: TCheckBox
        Left = 0
        Height = 19
        Hint = 'When enabled, only pointers that are stored in an address dividable by 4 are looked at'#13#10'When disabled, it won''t bother.'#13#10#13#10'pro: Fast scans'#13#10'Con: On some horrible designed games that you shouldn''t even play it won''t find the paths'
        Top = 0
        Width = 177
        Caption = 'Addresses must be 32-bit alligned'
        Checked = True
        OnChange = canNotReuse
        ParentShowHint = False
        ShowHint = True
        State = cbChecked
        TabOrder = 0
      end
      object edtReverseStop: TEdit
        Left = 28
        Height = 21
        Top = 124
        Width = 80
        CharCase = ecUppercase
        MaxLength = 8
        OnChange = canNotReuse
        TabOrder = 1
        Text = '7FFFFFFF'
      end
      object edtReverseStart: TEdit
        Left = 28
        Height = 21
        Top = 102
        Width = 80
        CharCase = ecUppercase
        MaxLength = 8
        OnChange = canNotReuse
        TabOrder = 2
        Text = '00000000'
      end
      object cbStaticOnly: TCheckBox
        Left = 0
        Height = 19
        Hint = 'When checked the pointerscan will only store a path when it starts with a static address. (or easily looked up address)'#13#10'When it''s disabled, it finds every single pointer path'#13#10#13#10'pro: Fast'#13#10'con: It may miss pointers that are accessed by special paths like thread local storage. (but even then they''d be useless for ce as they will change)'
        Top = 20
        Width = 189
        Caption = 'Only find paths with a static address'
        Checked = True
        ParentShowHint = False
        ShowHint = True
        State = cbChecked
        TabOrder = 3
      end
      object cbUseHeapData: TCheckBox
        Left = 0
        Height = 19
        Hint = 'When this is checked the heap is used to figure out the offset sizes, instead of blindly guessing them.'#13#10'pro: Greatly improve speed and a lot less useless results'#13#10'con: if the game allocates gigantic chunks of heap memory, and then divides it up itself, this will give wrong results.'#13#10#13#10'In other cases this will give perfect pointers '
        Top = 146
        Width = 234
        Caption = 'Improve pointerscan with gathered heap data'
        OnClick = cbUseHeapDataClick
        ParentShowHint = False
        ShowHint = True
        TabOrder = 4
      end
      object cbHeapOnly: TCheckBox
        Left = 16
        Height = 19
        Hint = 'If the address you search for isn''t a heap address, the scan will return 0 results'
        Top = 162
        Width = 248
        Caption = 'Only allow static and heap addresses in the path'
        Enabled = False
        OnClick = cbHeapOnlyClick
        ParentShowHint = False
        ShowHint = True
        TabOrder = 5
      end
      object cbOnlyOneStatic: TCheckBox
        Left = 0
        Height = 19
        Hint = 'When the pointerscanner goes through the list of pointervalues with a specific value, this will stop exploring other paths as soon as it encounters a static pointer to that value'#13#10#13#10'pro: Fast'#13#10'con: You may miss some valid results '
        Top = 60
        Width = 267
        Caption = 'Stop traversing a path when a static has been found'
        ParentShowHint = False
        ShowHint = True
        TabOrder = 6
      end
      object cbNoReadOnly: TCheckBox
        Left = 0
        Height = 19
        Hint = 'When checked the pointerscan will throw away memory that is readonly. So when it looks for paths, it won''t encounter paths that pass through read only memory blocks.'#13#10#13#10'When it''s unchecked, it does include readonly memory'#13#10#13#10#13#10'pro: faster, less useless results'#13#10'con: If the game decides to mark a pointer as readonly ce won''t find it '
        Top = 40
        Width = 222
        Caption = 'Don''t include pointers with read-only nodes'
        Checked = True
        OnChange = canNotReuse
        ParentShowHint = False
        ShowHint = True
        State = cbChecked
        TabOrder = 7
      end
      object cbClassPointersOnly: TCheckBox
        Left = 276
        Height = 19
        Hint = 'Object oriented programming languages tend to implement classobjects by having a pointer in the first element to something that describes the class'#13#10'With this option enabled, ce will check if it''s a classobject by checking that rule. If not, it won''t see it as a pointer.'#13#10'pro:Tremendous speed increase and almost perfect pointers'#13#10'con:Doesn''t work with runtime generated classes (java, .net) '
        Top = 0
        Width = 308
        Caption = 'First element of pointerstruct must point to module (e.g vtable)'
        OnChange = canNotReuse
        ParentShowHint = False
        ShowHint = True
        TabOrder = 8
      end
      object cbNoLoop: TCheckBox
        Left = 276
        Height = 19
        Hint = 'This will filter out pointerpaths that ended up in a loop'#13#10'e.g:'#13#10'base->p1->p2->p3->p1->p4'#13#10#13#10'you could just as well do base->p1->p4 then, so throw this one away (base->p1->p4 will be found another way)'#13#10#13#10'pro: Less results so less diskspace used'#13#10'con: slightly slows down the scan as it needs to check for loops every single iteration '
        Top = 40
        Width = 111
        Caption = 'No looping pointers'
        ParentShowHint = False
        ShowHint = True
        TabOrder = 9
      end
      object cbMaxOffsetsPerNode: TCheckBox
        Left = 276
        Height = 19
        Hint = 'When the pointerscan looks through the list of pointers with a specific value, it goes through every single pointer that has that value. Every time increasing the offset slightly.'#13#10'With this feature enabled the pointerscan will only check the first few pointers with that value.'#13#10#13#10'pro: Extremely fast, and the results have the lowest pointer paths possible.'#13#10'con: You''ll miss a lot of pointers that might be valid too '
        Top = 60
        Width = 163
        Caption = 'Max different offsets per node:'
        OnChange = cbMaxOffsetsPerNodeChange
        ParentShowHint = False
        ShowHint = True
        TabOrder = 10
      end
      object edtMaxOffsetsPerNode: TEdit
        Left = 444
        Height = 21
        Top = 58
        Width = 40
        Enabled = False
        TabOrder = 11
        Text = '2'
      end
      object cbStaticStacks: TCheckBox
        Left = 276
        Height = 19
        Hint = 'This allows the stack of threads to be seen as static addresses by the pointerscan.'#13#10'The main thread is always a sure bet that it''s the first one in the list. And often the second thread created is pretty stable as well.'#13#10'With more there''s a bigger change they get created and destroyed randomly'#13#10#13#10'When a program enters a function and exits it, the stack pointer decreases and increases, and the data there gets written to.'#13#10'The farther the game is inside function calls, the more static the older data will be.'#13#10#13#10'With max stack offset: you can set the max size that can be deemed as static enough.'#13#10#13#10'pro: It finds paths otherwise never found'#13#10'con: More results, more diskspace '
        Top = 80
        Width = 328
        Caption = 'Allow stack addresses of the first thread(s) to be handled as static'
        Checked = True
        OnChange = cbStaticStacksChange
        ParentShowHint = False
        ShowHint = True
        State = cbChecked
        TabOrder = 12
      end
      object lblNumberOfStackThreads: TLabel
        Left = 292
        Height = 13
        Top = 105
        Width = 193
        Caption = 'Number of threads from oldest to newest:'
        ParentColor = False
      end
      object edtThreadStacks: TEdit
        Left = 509
        Height = 21
        Hint = 'Fill in the total number of threads that should be allowed to be used as a stack lookup.'#13#10'Thread 1 is usually the main thread of the game, but if that one spawns another thread for game related events, you might want to have that secondary thread as well.'#13#10'More threads is not recommend as they may get created and destroyed on the fly, and are therefore useless as a lookup base, but it depends on the game.'
        Top = 103
        Width = 24
        ParentShowHint = False
        ShowHint = True
        TabOrder = 13
        Text = '2'
      end
      object lblStackSize: TLabel
        Left = 291
        Height = 13
        Top = 124
        Width = 213
        Caption = 'Max stackoffset to be deemed static enough:'
        ParentColor = False
      end
      object edtStackSize: TEdit
        Left = 509
        Height = 21
        Top = 124
        Width = 80
        TabOrder = 14
        Text = '4096'
      end
      object cbStackOnly: TCheckBox
        Left = 292
        Height = 19
        Hint = 'Enable this if you wish to only find pointer paths with a stack address.'#13#10'Combine this with "Only find paths with a static address" (default on) else this option will have no effect'#13#10#13#10'pro: You''ll only get paths from the stack'#13#10'con: You don''t get get paths from random dll''s or the .exe '
        Top = 144
        Width = 213
        Caption = 'Stack addresses as ONLY static address'
        ParentShowHint = False
        ShowHint = True
        TabOrder = 15
      end
      object cbAcceptNonModuleVtable: TCheckBox
        Left = 291
        Height = 19
        Top = 20
        Width = 185
        Caption = 'Also accept non-module addresses'
        Enabled = False
        TabOrder = 16
      end
    end
  end
  object cbMustEndWithSpecificOffset: TCheckBox
    Left = 8
    Height = 19
    Top = 336
    Width = 199
    Caption = 'Pointers must end with specific offsets'
    Font.Height = -11
    Font.Name = 'MS Sans Serif'
    OnChange = cbMustEndWithSpecificOffsetChange
    ParentFont = False
    TabOrder = 2
  end
  object Panel1: TPanel
    Left = 0
    Height = 104
    Top = 360
    Width = 638
    Align = alBottom
    BevelOuter = bvNone
    ClientHeight = 104
    ClientWidth = 638
    Font.Height = -11
    Font.Name = 'MS Sans Serif'
    ParentFont = False
    TabOrder = 3
    object Label3: TLabel
      Left = 24
      Height = 13
      Top = 42
      Width = 105
      Caption = 'Maximum offset value:'
      ParentColor = False
    end
    object Label12: TLabel
      AnchorSideRight.Control = editMaxLevel
      AnchorSideRight.Side = asrCenter
      Left = 231
      Height = 13
      Top = 42
      Width = 45
      Caption = 'Max level'
      ParentColor = False
    end
    object Label9: TLabel
      Left = 16
      Height = 13
      Top = 10
      Width = 113
      Caption = 'Nr of threads scanning: '
      ParentColor = False
    end
    object Button1: TButton
      Left = 138
      Height = 25
      Top = 68
      Width = 80
      Caption = 'OK'
      Default = True
      OnClick = Button1Click
      TabOrder = 0
    end
    object editStructsize: TEdit
      Left = 158
      Height = 21
      Top = 38
      Width = 60
      TabOrder = 1
      Text = '2048'
    end
    object editMaxLevel: TEdit
      Left = 286
      Height = 21
      Top = 38
      Width = 80
      TabOrder = 2
      Text = '5'
    end
    object btnCancel: TButton
      Left = 226
      Height = 25
      Top = 68
      Width = 93
      Cancel = True
      Caption = 'Cancel'
      ModalResult = 2
      TabOrder = 3
    end
    object edtThreadcount: TEdit
      Left = 158
      Height = 21
      Top = 6
      Width = 60
      TabOrder = 4
      Text = '2'
    end
    object ComboBox1: TComboBox
      Left = 226
      Height = 21
      Top = 5
      Width = 140
      ItemHeight = 13
      ItemIndex = 3
      Items.Strings = (
        'Idle'
        'Lowest'
        'Lower'
        'Normal'
        'Higher'
        'Highest'
        'TimeCritical'
      )
      TabOrder = 5
      Text = 'Normal'
    end
  end
  object cbValueType: TComboBox
    Left = 501
    Height = 21
    Top = 28
    Width = 132
    Font.Height = -11
    Font.Name = 'MS Sans Serif'
    ItemHeight = 13
    ItemIndex = 0
    Items.Strings = (
      '4 Byte'
      'Float'
      'Double'
    )
    ParentFont = False
    Style = csDropDownList
    TabOrder = 4
    Text = '4 Byte'
  end
  object Panel2: TPanel
    Left = 8
    Height = 25
    Top = 0
    Width = 625
    BevelOuter = bvNone
    ClientHeight = 25
    ClientWidth = 625
    Font.Height = -11
    Font.Name = 'MS Sans Serif'
    ParentFont = False
    TabOrder = 5
    object rbFindAddress: TRadioButton
      Left = 0
      Height = 19
      Top = 4
      Width = 93
      Caption = 'Address to find:'
      Checked = True
      OnChange = rbFindValueClick
      TabOrder = 0
      TabStop = True
    end
    object rbFindValue: TRadioButton
      Left = 96
      Height = 19
      Top = 4
      Width = 82
      Caption = 'Value to find:'
      OnChange = rbFindValueClick
      TabOrder = 1
    end
  end
  object cbReusePointermap: TCheckBox
    Left = 8
    Height = 19
    Hint = 'I you did a previous pointerscan and it completed very qickly, you can scan again and skip the initial setup'
    Top = 272
    Width = 218
    Caption = 'Use pointermap from previous pointerscan'
    Checked = True
    Font.Height = -11
    Font.Name = 'MS Sans Serif'
    OnChange = cbReusePointermapChange
    ParentFont = False
    ParentShowHint = False
    ShowHint = True
    State = cbChecked
    TabOrder = 6
  end
  object cbUseLoadedPointermap: TCheckBox
    Left = 8
    Height = 19
    Hint = 'Use this if you have created a pointermap on a system that runs the game, but you wish to do the scan on another system (or multiple systems).'#13#10'Checking this option will open a dialog where you can select the pointermap'
    Top = 293
    Width = 126
    Caption = 'Use saved pointermap'
    OnChange = cbUseLoadedPointermapChange
    ParentShowHint = False
    ShowHint = True
    TabOrder = 7
  end
  object cbDistributedScanning: TCheckBox
    Left = 288
    Height = 19
    Hint = 'Opens a port that other systems running the pointerscanner can connect to and help out with the scan'
    Top = 293
    Width = 142
    Caption = 'Allow distributed scanning'
    OnChange = cbDistributedScanningChange
    ParentShowHint = False
    ShowHint = True
    TabOrder = 8
  end
  object edtDistributedPort: TEdit
    AnchorSideLeft.Control = lblPort
    AnchorSideLeft.Side = asrBottom
    AnchorSideTop.Control = lblPort
    AnchorSideTop.Side = asrCenter
    Left = 326
    Height = 21
    Top = 311
    Width = 103
    TabOrder = 9
    Text = '52737'
  end
  object lblPort: TLabel
    AnchorSideLeft.Control = cbDistributedScanning
    AnchorSideTop.Control = cbDistributedScanning
    AnchorSideTop.Side = asrBottom
    Left = 304
    Height = 13
    Top = 315
    Width = 22
    BorderSpacing.Left = 16
    BorderSpacing.Top = 3
    Caption = 'Port:'
    ParentColor = False
  end
  object cbBroadcast: TCheckBox
    AnchorSideLeft.Control = lblPort
    AnchorSideTop.Control = edtDistributedPort
    AnchorSideTop.Side = asrBottom
    Left = 304
    Height = 19
    Hint = 'When checked will send a broadcast message on the local network which will tell pointer scanner systems to join this scan if they are set to auto join'#13#10#13#10'You can use "Setup specific IP''s to notify" to notify systems of this scan that are outside of the local network'
    Top = 332
    Width = 179
    Caption = 'Broadcast that a scan has started'
    Enabled = False
    OnChange = cbBroadcastChange
    ParentShowHint = False
    ShowHint = True
    TabOrder = 10
  end
  object btnNotifySpecificIPs: TButton
    AnchorSideLeft.Control = cbBroadcast
    AnchorSideLeft.Side = asrBottom
    AnchorSideTop.Control = cbBroadcast
    AnchorSideTop.Side = asrCenter
    Left = 487
    Height = 25
    Top = 329
    Width = 139
    BorderSpacing.Left = 4
    Caption = 'Setup specific IP''s to notify'
    Enabled = False
    OnClick = btnNotifySpecificIPsClick
    TabOrder = 11
  end
  object cbMustStartWithBase: TCheckBox
    Left = 8
    Height = 19
    Hint = 'Will only mark the given range as valid base address (Will reduce the number of results)'#13#10'This internally makes use of the "Only find paths with a static address" feature by marking the provided range as static only, so it must be enabled.'
    Top = 314
    Width = 204
    Caption = 'Base address must be in specific range'
    OnChange = cbMustStartWithBaseChange
    ParentShowHint = False
    ShowHint = True
    TabOrder = 12
  end
  object cbCompressedPointerscanFile: TCheckBox
    Left = 288
    Height = 19
    Hint = 'Compresses the generated .PTR files slightly so they take less space on the disk and less time writing to disk.'#13#10'Most of the time the bottleneck of a pointerscan is disk writing, so it is recommended to use this option.'#13#10#13#10'Compressed .PTR files can not be read out by older Cheat Engine versions'
    Top = 272
    Width = 152
    Caption = 'Compressed pointerscan file'
    Checked = True
    ParentShowHint = False
    ShowHint = True
    State = cbChecked
    TabOrder = 13
  end
  object odLoadPointermap: TOpenDialog
    DefaultExt = '.scandata'
    Filter = 'All files (*.*)|*.*|scandata files|*.scandata'
    FilterIndex = 2
    left = 184
    top = 296
  end
end
